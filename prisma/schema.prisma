generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  username        String     @unique @db.VarChar(30)
  password        String
  salt            String
  creatorId       Int?
  creator         User?      @relation("Creation", fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdUser     User[]     @relation("Creation")
  role            UserRole?  @relation(fields: [roleId], references: [id])
  tasks           Task[]     @relation("UsersOnTask")
  roleId          Int?
  managingProject Project[]  @relation("Managers")
  project         Project[]  @relation("Users")
  userTask        UserTask[]
}

model UserRole {
  id           Int         @id @default(autoincrement())
  name         String      @unique
  group        String
  user         User[]
  permission   Permission? @relation(fields: [permissionId], references: [id])
  permissionId Int?
}

model Project {
  id       Int    @id @default(autoincrement())
  name     String
  managers User[] @relation("Managers")
  users    User[] @relation("Users")
  tasks    Task[]
}

model Task {
  id              Int        @id @default(autoincrement())
  project         Project    @relation(fields: [projectId], references: [id])
  projectId       Int
  usersOnTask     User[]     @relation("UsersOnTask")
  taskDescription String
  start           DateTime
  deadline        DateTime
  finished        Boolean
  userTask        UserTask[]
}

model UserTask {
  id           Int      @id @default(autoincrement())
  parentTask   Task     @relation(fields: [taskId], references: [id])
  taskId       Int
  taskDetail   String
  start        DateTime
  deadline     DateTime
  finished     Boolean
  assignedUser User     @relation(fields: [userId], references: [id])
  userId       Int
}

model Permission {
  id    Int        @id @default(autoincrement())
  route String     @unique
  role  UserRole[]
}
